<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:styles="clr-namespace:CAT.Styles">

    <Style x:Key="IconButtonsStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Height" Value="25" />
        <Setter Property="Width" Value="25" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="bd" CornerRadius="200" Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Path Name="ico" Data="{TemplateBinding Content}" Fill="#CFE2F7" Height="13" Width="13"
                              Stretch="Uniform" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource WhiteColorLight}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="Tag" Value="IsCloseButton" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="#F72626" />
                            <Setter TargetName="ico" Property="Fill" Value="{DynamicResource WhiteColorLight}" />
                        </MultiTrigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ico" Property="Fill" Value="{DynamicResource WhiteColorLight}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="IconButtonsStyletwo" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Height" Value="25" />
        <Setter Property="Width" Value="25" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="bd" CornerRadius="200" Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Path Name="ico" Data="{TemplateBinding Content}" Fill="{TemplateBinding BorderBrush}"
                              Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" Stretch="Uniform" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ico" Property="Fill" Value="LightSteelBlue" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MenuRadioButtonStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="LightSteelBlue" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border x:Name="menuButton" Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="45" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>

                            <!-- Selected  -->
                            <Border x:Name="btnSelected" Grid.ColumnSpan="2" CornerRadius="4" Width="210"
                                    HorizontalAlignment="Right" />

                            <!-- Indicator -->
                            <Rectangle Grid.Column="0" Name="Indicator" HorizontalAlignment="Left" Width="4"
                                       Height="40"
                                       VerticalAlignment="Center" RadiusX="2" RadiusY="2" />

                            <!-- Icon -->
                            <Path Grid.Column="0" x:Name="Icon"
                                  Data="{Binding Tag, RelativeSource={RelativeSource AncestorType={x:Type RadioButton}}}"
                                  Height="24" Width="24" Stretch="None" Fill="{TemplateBinding Foreground}"
                                  VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0 0 5 0" />

                            <!-- Text -->
                            <TextBlock x:Name="txtName" HorizontalAlignment="Left" VerticalAlignment="Center"
                                       Margin="12 0 0 0"
                                       Grid.Column="1" Text="{TemplateBinding Content}"
                                       Foreground="{TemplateBinding Foreground}"
                                       FontWeight="{TemplateBinding FontWeight}"
                                       FontSize="{TemplateBinding FontSize}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="txtName" Property="Foreground" Value="{DynamicResource ThemeColor}" />
                            <Setter TargetName="Icon" Property="Fill" Value="{DynamicResource ThemeColor}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Icon" Property="Fill" Value="{DynamicResource ThemeColor}" />
                            <Setter TargetName="Indicator" Property="Fill" Value="{DynamicResource ThemeColor}" />
                            <Setter TargetName="Indicator" Property="Height" Value="20" />
                            <Setter TargetName="btnSelected" Property="Background"
                                    Value="{DynamicResource WhiteColorLight}" />
                            <Setter TargetName="txtName" Property="Foreground" Value="{DynamicResource ThemeColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type styles:CornerIconRadioButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type styles:CornerIconRadioButton}">
                    <Border Width="75" Height="26.5" BorderThickness="0" x:Name="border"
                            Background="{DynamicResource ThemeColor}" CornerRadius="15">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Path x:Name="path" Data="{TemplateBinding Data}" Fill="{DynamicResource WhiteColorLight}"
                                  Height="15" Width="15"
                                  Stretch="Uniform" Margin="0,0,5,0" />
                            <TextBlock Margin="5,0,0,0" FontSize="13" x:Name="borderTextBlock"
                                       Foreground="{DynamicResource WhiteColorLight}"
                                       Text="{TemplateBinding Content}" HorizontalAlignment="Right"
                                       VerticalAlignment="Center" />
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="IsMouseOver" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource WhiteColorLight}" />
                            <Setter TargetName="path" Property="Fill" Value="{DynamicResource ThemeColor}" />
                            <Setter TargetName="borderTextBlock" Property="Foreground"
                                    Value="{DynamicResource ThemeColor}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="path" Property="Fill" Value="{DynamicResource ThemeColor}" />
                            <Setter TargetName="borderTextBlock" Property="Foreground"
                                    Value="{DynamicResource ThemeColor}" />
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource WhiteColorLight}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="False" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="border" Property="Background" Value="#ADD8E6" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type styles:CornerButton}">
        <Setter Property="CornerRadius" Value="3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type styles:CornerButton}">
                    <Border x:Name="border"
                            Background="Transparent"
                            BorderThickness="1"
                            Padding="5"
                            BorderBrush="{DynamicResource ThemeColor}"
                            CornerRadius="{TemplateBinding CornerRadius}">

                        <TextBlock FontSize="{TemplateBinding FontSize}"
                                   x:Name="borderTextBlock"
                                   Foreground="{DynamicResource ThemeColor}"
                                   Text="{TemplateBinding Content}"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center" />
                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="border" Property="BorderBrush" Value="Gray" />
                            <Setter TargetName="borderTextBlock" Property="Foreground" Value="Black" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>

                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource ThemeColor}" />
                            <Setter TargetName="border" Property="Background" Value="#ADD8E6" />
                            <Setter TargetName="borderTextBlock" Property="Foreground"
                                    Value="{DynamicResource ThemeColor}" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type styles:TransparentIconRadioButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type styles:TransparentIconRadioButton}">
                    <Border x:Name="border"
                            Background="Transparent"
                            CornerRadius="15">
                        <StackPanel Orientation="Horizontal"
                                    VerticalAlignment="Center">
                            <Path Data="{TemplateBinding Data}"
                                  Height="50" Width="50"
                                  Stretch="Fill"
                                  x:Name="path"
                                  Fill="Gray" />
                            <TextBlock FontSize="22"
                                       Margin="15,0,0,0"
                                       x:Name="borderTextBlock"
                                       Foreground="Gray"
                                       Text="{TemplateBinding Content}"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center" />
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="path" Property="Fill" Value="Black" />
                            <Setter TargetName="borderTextBlock" Property="Foreground" Value="Black" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="path" Property="Fill" Value="Black" />
                            <Setter TargetName="borderTextBlock" Property="Foreground" Value="Black" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type styles:CornerTextBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type styles:CornerTextBox}">
                    <Border Background="Transparent"
                            BorderThickness="2"
                            BorderBrush="{DynamicResource ThemeColor}"
                            CornerRadius="{TemplateBinding CornerRadius}">
                        <Grid>
                            <TextBox
                                Text="{Binding Text, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
                                Padding="5,0,0,0"
                                BorderBrush="Transparent"
                                Background="Transparent"
                                Foreground="{DynamicResource ThemeColor}"
                                FontSize="18"
                                FontFamily="Microsoft YaHei"
                                HorizontalContentAlignment="Left"
                                VerticalContentAlignment="Center" />

                            <TextBlock x:Name="borderTextBlock"
                                       Background="Transparent"
                                       FontSize="16"
                                       Foreground="Black"
                                       Text="{TemplateBinding Postscript}"
                                       IsHitTestVisible="False"
                                       FontFamily="Microsoft YaHei"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="borderTextBlock" Property="Foreground"
                                    Value="{DynamicResource ThemeColor}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="borderTextBlock" Property="Foreground"
                                    Value="{DynamicResource ThemeColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type styles:CornerComboBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type styles:CornerComboBox}">
                    <Border x:Name="border"
                            BorderBrush="Gray"
                            BorderThickness="1"
                            Background="Transparent"
                            CornerRadius="{TemplateBinding CornerRadius}">
                        <Grid>
                            <ToggleButton Name="ToggleButton"
                                          Background="Transparent"
                                          BorderBrush="Transparent"
                                          Focusable="false"
                                          IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          ClickMode="Press">
                                <ToggleButton.Template>
                                    <ControlTemplate TargetType="ToggleButton">
                                        <Border Background="Transparent" />
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>

                            <Path Data="M 0 0 L 4 4 L 8 0"
                                  Stroke="Black"
                                  Name="Path"
                                  StrokeThickness="1"
                                  HorizontalAlignment="Right"
                                  VerticalAlignment="Center"
                                  Margin="0,0,15,0" />

                            <ContentPresenter Grid.Column="0" Name="ContentSite"
                                              IsHitTestVisible="False"
                                              Content="{TemplateBinding SelectionBoxItem}"
                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                              VerticalAlignment="Center"
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                              HorizontalAlignment="Center" />

                            <Popup Grid.Column="0" Name="Popup"
                                   Placement="Top"
                                   IsOpen="{TemplateBinding IsDropDownOpen}"
                                   AllowsTransparency="True"
                                   Focusable="False"
                                   PopupAnimation="Slide">
                                <Border Name="DropDownBorder"
                                        Background="{DynamicResource WhiteColorLight}"
                                        Opacity="0.8"
                                        CornerRadius="6,6,0,0"
                                        Width="{TemplateBinding Width}"
                                        BorderThickness="1"
                                        BorderBrush="LightGray">
                                    <ScrollViewer Margin="0" CanContentScroll="True">
                                        <ItemsPresenter />
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Path" Property="Stroke" Value="{DynamicResource ThemeColor}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource ThemeColor}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource ThemeColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ComboBoxItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ComboBoxItem">
                                <Border Background="{DynamicResource WhiteColorLight}"
                                        x:Name="border"
                                        CornerRadius="4"
                                        Margin="4"
                                        Padding="8">

                                    <TextBlock Text="{TemplateBinding Content}"
                                               HorizontalAlignment="Center"
                                               Foreground="Black" />
                                </Border>
                                <ControlTemplate.Triggers>

                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="border" Property="Background" Value="LightBlue" />
                                    </Trigger>

                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter TargetName="border" Property="Background"
                                                Value="{DynamicResource ThemeColor}" />
                                        <Setter TargetName="border" Property="Opacity" Value="0.8" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="styles:CornerTunnelTextBox">
        <Setter Property="IsTrue" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="styles:CornerTunnelTextBox">
                    <StackPanel>
                        <Border BorderThickness="0"
                                CornerRadius="6"
                                x:Name="border">
                            <TextBox
                                Text="{Binding Text, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
                                Padding="2"
                                BorderThickness="0"
                                Background="Transparent"
                                FontWeight="Bold"
                                IsEnabled="False"
                                Foreground="Black"
                                x:Name="text"
                                FontSize="17"
                                HorizontalContentAlignment="Center"
                                VerticalContentAlignment="Center" />
                        </Border>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsTrue" Value="True">
                            <Setter TargetName="border" Property="Background" Value="GreenYellow" />
                            <Setter TargetName="text" Property="Foreground" Value="RoyalBlue" />
                            <Setter TargetName="text" Property="Text" Value="在线" />
                        </Trigger>
                        <Trigger Property="IsTrue" Value="False">
                            <Setter TargetName="border" Property="Background" Value="Red" />
                            <Setter TargetName="text" Property="Foreground" Value="Yellow" />
                            <Setter TargetName="text" Property="Text" Value="离线" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="styles:CornerTextBlock">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="styles:CornerTextBlock">
                    <StackPanel>
                        <TextBox
                            Text="{Binding Text, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
                            Padding="2"
                            BorderThickness="0"
                            Background="Transparent"
                            Foreground="Black"
                            FontWeight="Bold"
                            IsReadOnly="True"
                            FontSize="17"
                            HorizontalContentAlignment="Center"
                            VerticalContentAlignment="Center" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="styles:UserCard">
        <Setter Property="Text" Value="我是擎天柱" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="styles:UserCard">
                    <StackPanel Orientation="Vertical">
                        <TextBlock FontSize="15" HorizontalAlignment="Center" Text="{TemplateBinding Tag}" />

                        <Border CornerRadius="2"
                                Background="{DynamicResource ThemeColor}"
                                Margin="0,10,0,10"
                                Opacity="0.8"
                                Width="120"
                                Height="4" />

                        <TextBlock FontSize="{TemplateBinding FontSize}" HorizontalAlignment="Center"
                                   Text="{TemplateBinding Text}" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type styles:Card}">
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type styles:Card}">
                    <Border Margin="5" CornerRadius="6" Opacity="0.8" Background="{DynamicResource WhiteColorLight}">
                        <Grid>
                            <StackPanel Orientation="Horizontal">
                                <Grid Width="100" Height="100" Margin="5,5,0,5">
                                    <Image Source="{TemplateBinding ImageSource}" Stretch="UniformToFill">
                                        <Image.Clip>
                                            <EllipseGeometry Center="50,50" RadiusX="50" RadiusY="50" />
                                        </Image.Clip>
                                    </Image>
                                </Grid>
                                <TextBlock VerticalAlignment="Center" Margin="15,0,0,0"
                                           Text="{TemplateBinding Title}"
                                           FontSize="{TemplateBinding FontSize}" />
                            </StackPanel>
                            <TextBox HorizontalAlignment="Right"
                                     VerticalAlignment="Center"
                                     Margin="15"
                                     IsReadOnly="True"
                                     Background="Transparent"
                                     BorderThickness="0"
                                     Text="{TemplateBinding TagText}"
                                     FontSize="{TemplateBinding FontSize}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid>
                        <!--滚动条颜色-->
                        <Border Background="{DynamicResource ThemeColor}" CornerRadius="4" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="HorizontalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Opacity" Value="0.2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}" Width="{TemplateBinding Width}"
                               Height="{TemplateBinding Height}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="VerticalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Opacity" Value="0.2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}" Width="{TemplateBinding Width}"
                               Height="{TemplateBinding Height}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--滚动条上下按钮-->
    <Style x:Key="VerticalScrollBarPageButton2" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Opacity" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="#90000000" Width="0" Height="0" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ForScrollbar" TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Margin" Value="0,1,1,6" />
        <Setter Property="Width" Value="5" />
        <Setter Property="MinWidth" Value="5" />
        <Setter Property="Opacity" Value="0.2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="auto" />
                        </Grid.RowDefinitions>
                        <RepeatButton Grid.Row="0" Style="{StaticResource VerticalScrollBarPageButton2}"
                                      Command="{x:Static ScrollBar.PageUpCommand}" />
                        <Track x:Name="PART_Track" Grid.Row="1" IsEnabled="{TemplateBinding IsMouseOver}"
                               IsDirectionReversed="true">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Style="{StaticResource VerticalScrollBarPageButton}"
                                              Command="{x:Static ScrollBar.PageUpCommand}" />
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Style="{StaticResource VerticalScrollBarPageButton}"
                                              Command="{x:Static ScrollBar.PageDownCommand}" />
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{StaticResource ScrollBarThumb}" />
                            </Track.Thumb>
                        </Track>
                        <RepeatButton Grid.Row="2" Style="{StaticResource VerticalScrollBarPageButton2}"
                                      Command="{x:Static ScrollBar.PageDownCommand}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Margin" Value="1,0,6,1" />
                <Setter Property="Height" Value="5" />
                <Setter Property="MinHeight" Value="5" />
                <Setter Property="Width" Value="Auto" />
                <Setter Property="Opacity" Value="0.2" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                <Track x:Name="PART_Track" IsEnabled="{TemplateBinding IsMouseOver}">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Style="{StaticResource HorizontalScrollBarPageButton}"
                                                      Command="{x:Static ScrollBar.PageLeftCommand}" />
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Style="{StaticResource HorizontalScrollBarPageButton}"
                                                      Command="{x:Static ScrollBar.PageRightCommand}" />
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource ScrollBarThumb}" />
                                    </Track.Thumb>
                                </Track>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ForScrollviewer"
           TargetType="{x:Type ScrollViewer}">
        <Setter Property="BorderBrush" Value="LightGray" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                        <Grid Background="{TemplateBinding Background}">
                            <ScrollContentPresenter Cursor="{TemplateBinding Cursor}"
                                                    Margin="{TemplateBinding Padding}"
                                                    ContentTemplate="{TemplateBinding ContentTemplate}" />
                            <ScrollBar x:Name="PART_VerticalScrollBar"
                                       HorizontalAlignment="Right"
                                       Maximum="{TemplateBinding ScrollableHeight}"
                                       Orientation="Vertical"
                                       Style="{StaticResource ForScrollbar}"
                                       ViewportSize="{TemplateBinding ViewportHeight}"
                                       Value="{TemplateBinding VerticalOffset}"
                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />
                            <ScrollBar x:Name="PART_HorizontalScrollBar"
                                       Maximum="{TemplateBinding ScrollableWidth}"
                                       Orientation="Horizontal"
                                       Style="{StaticResource ForScrollbar}"
                                       VerticalAlignment="Bottom"
                                       Value="{TemplateBinding HorizontalOffset}"
                                       ViewportSize="{TemplateBinding ViewportWidth}"
                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="ScrollChanged">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                        Storyboard.TargetName="PART_VerticalScrollBar"
                                        Storyboard.TargetProperty="Opacity"
                                        To="0.8"
                                        Duration="0:0:1" />
                                    <DoubleAnimation
                                        Storyboard.TargetName="PART_VerticalScrollBar"
                                        Storyboard.TargetProperty="Opacity"
                                        To="0.2"
                                        Duration="0:0:1"
                                        BeginTime="0:0:1" />
                                    <DoubleAnimation
                                        Storyboard.TargetName="PART_HorizontalScrollBar"
                                        Storyboard.TargetProperty="Opacity"
                                        To="0.8"
                                        Duration="0:0:1" />
                                    <DoubleAnimation
                                        Storyboard.TargetName="PART_HorizontalScrollBar"
                                        Storyboard.TargetProperty="Opacity"
                                        To="0.2"
                                        Duration="0:0:1"
                                        BeginTime="0:0:1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseEnter"
                                      SourceName="PART_VerticalScrollBar">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                        Storyboard.TargetName="PART_VerticalScrollBar"
                                        Storyboard.TargetProperty="Opacity"
                                        To="0.8"
                                        Duration="0:0:0.7" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave"
                                      SourceName="PART_VerticalScrollBar">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                        Storyboard.TargetName="PART_VerticalScrollBar"
                                        Storyboard.TargetProperty="Opacity"
                                        To="0.2"
                                        Duration="0:0:0.7" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseEnter"
                                      SourceName="PART_HorizontalScrollBar">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                        Storyboard.TargetName="PART_HorizontalScrollBar"
                                        Storyboard.TargetProperty="Opacity"
                                        To="0.8"
                                        Duration="0:0:0.7" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave"
                                      SourceName="PART_HorizontalScrollBar">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                        Storyboard.TargetName="PART_HorizontalScrollBar"
                                        Storyboard.TargetProperty="Opacity"
                                        To="0.2"
                                        Duration="0:0:0.7" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="ScrollBar" BasedOn="{StaticResource ForScrollbar}" />
    <Style TargetType="ScrollViewer" BasedOn="{StaticResource ForScrollviewer}" />
    
            <Style x:Key="DynamicBorderRadioButtonStyle" TargetType="RadioButton">
            <Setter Property="Background" Value="{DynamicResource ThemeColor}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <StackPanel Orientation="Horizontal">
                            <Border
                                x:Name="border"
                                Width="40"
                                Height="40"
                                HorizontalAlignment="Left"
                                CornerRadius="3"
                                Margin="0"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{DynamicResource WhiteColorLight}"
                                BorderThickness="2"/>
                            <TextBlock
                                Margin="5,0,0,0"
                                VerticalAlignment="Center"
                                x:Name="TextBlock"
                                Text="{TemplateBinding Content}"
                                FontSize="15"/>
                            </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="TextBlock" Property="Foreground" Value="{DynamicResource ThemeColor}"/>
                                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource ThemeColor}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="TextBlock" Property="Foreground" Value="{DynamicResource ThemeColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
</ResourceDictionary>